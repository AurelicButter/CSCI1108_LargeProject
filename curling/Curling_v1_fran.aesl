<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="1" name="turn1"/>
<constant value="0" name="stopped"/>
<constant value="300" name="target"/>
<constant value="300" name="threshold"/>
<constant value="300" name="colour"/>
<constant value="2" name="straight1"/>
<constant value="3" name="turn2"/>
<constant value="4" name="straight2"/>
<constant value="5" name="turn3"/>
<constant value="6" name="wait"/>
<constant value="8" name="final"/>
<constant value="7" name="hitgoal"/>
<constant value="10" name="lost"/>
<constant value="700" name="thresholdgrey"/>
<constant value="8" name="lastsecond"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">var count = 1
var state 
var timer = 0
var callsubplease = 0

onevent button.forward
	state = turn1
	callsub action 
	
onevent button.backward
	state = stopped
	motor.right.target = 0 
	motor.left.target = 0
	count = 0

onevent prox
			# every time the robot senses something and the sub routine 		needs it, we call it
			#piece of code needs to be added here 
			# it is in the folder 
			# why does it not work without it?!
			
			if  state != stopped and 						prox.ground.delta[0] &lt;= threshold 				and callsubplease == 0 then
					count = 3
					callsub action				
			end 
				
			if state != stopped and 							prox.ground.delta[0] &lt;= threshold and 				callsubplease ==1 then
					count = 8
					callsub action
			end
			if state != stopped and 							prox.ground.delta[0] &lt;= threshold and 				callsubplease ==2 then
					
					callsub action
			end
				
sub action
	if count==1 then
	#turn1
		timer.period[0]=600
		timer = 1
		motor.left.target = -300
		motor.right.target = 300
	end
	
	#we implement a loop in which the robot goes straight forward until it reaches the black tape	
	while count==2 do
		state = straight1
		motor.left.target = 300
		motor.right.target = 300
		#exit condition: if the robot sees the black tape, count is set to 3
		if prox.ground.delta[0] &lt;= threshold then
			count = 3
		end
	#implement that it goes back for 1 second before turning
	end
	if count==3 then
		callsubplease = 0
		state = turn1
		timer.period[0]=300
		timer = 1
		motor.left.target = 300
		motor.right.target = -300
	end
	
	if count==4 then
		state= straight2
	#straight2
		#it needs normally 15 seconds to cross the table but for tests it is set to 6 sec
		timer.period[0]=10000
		timer = 1
		motor.left.target = 300
		motor.right.target = 300
	end
	
	if count==5 then
		state=turn3
	#turn3
		timer.period[0]= 1000
		timer = 1
		motor.left.target = 300
		motor.right.target = -300
	end
	
	if count==6 then
		state = wait
	#wait
		timer.period[0] = 7000
		timer = 1
		motor.left.target = 0
		motor.right.target = 0
	end
	
	while count==7 do
		state = hitgoal
		timer = 1
		#target speed is faster in case other robot gets hit (smashed)
		motor.left.target = 400
		motor.right.target = 400
		callsubplease = 1
		if prox.ground.delta[0] &lt;= threshold then
			count = 8
		end
	end
	
	if count == 8 then
		callsubplease = 2
		timer.period[0] = 800
		timer = 1
	#happens when we assume that we are close to final destination
	#we stop and state equals final then
		state = lastsecond
		motor.left.target = 400
		motor.right.target = 400
	end
	if count==9 then
		state = stopped
		motor.left.target = 0
		motor.right.target = 0
		
	end

onevent timer0
	if timer == 1 and state!=stopped then
		count=count+1
		motor.left.target = 0
		motor.right.target = 0
		timer = 0
		callsub action
	end</node>


</network>
