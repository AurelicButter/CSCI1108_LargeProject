<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="300" name="SPEED"/>
<constant value="0" name="STOPPED"/>
<constant value="1" name="FORWARD"/>
<constant value="2" name="BLOCK"/>
<constant value="3" name="TURN"/>
<constant value="300" name="gTHRESHOLD"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">var state = STOPPED
var firstScan[6] = [0, 0, 0, 0, 0, 0]
var location[8] = [2, 2, 2, 2, 2, 2, 2, 2]
var dummy

#Location Key Quad
var locations[32] = [
	[0, 1, 0, 0],
	[1, 0, 0, 0],
	[0, 0, 0, 1],
	[0, 0, 1, 1],
	[0, 1, 1, 0],
	[1, 1, 0, 0],
	[1, 0, 0, 1],
	[0, 0, 1, 0]
]

var currLoc[4] = [2, 2, 2, 2] #2 is a placeholder null value.
var i = 0
var foundLoc = 10 #Sets to the square order thingy.

onevent button.backward
	state = STOPPED
	motor.left.target = 0
	motor.right.target = 0
	
onevent button.right
	if firstScan[0] == 0 then 
		callsub scan
	end

onevent button.forward
	#Something
	
sub scan
	if firstScan[0] == 0 then
		#Adds values to the firstScan array
	else
		#Scans and checks if it matches with the saved data.
		if  dummy == firstScan[0] then
			callsub returnHome
		end
	end
	
sub localize
	callsub gScan
		
sub gScan
	if gTHRESHOLD > prox.ground.delta[0] then
		currLoc[i] = 1
	else
		currLoc[i] = 0
	end
	i += 1

sub returnHome
	#Turns around and goes home.
	#Displays the location and the colour
	
	#Senses no wall and turns an amount of degrees
	state = FORWARD
	motor.left.target = SPEED
	motor.right.speed = SPEED
	
	#Senses the center and stops
	
	callsub flashResults
	
sub flashResults
#Displays results.</node>


</network>
